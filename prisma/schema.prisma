// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @unique
  userName  String    @unique
  email     String    @unique
  password  String
  avatar    String    @default("https://www.faydavipegitim.com/media/contents/0ed09-user-profile.jpeg")
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  folowers Follower[]

}

model Topic {
  id        String    @unique
  text      String    @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  posts     Post[]
}

model Post {
  id        String    @unique
  text      String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  topic     Topic     @relation(fields: [topicId], references: [id])
  topicId   String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id     String @unique
  post   Post   @relation(fields: [postId], references: [id])
  text String
  postId String
  user   User   @relation(fields: [userId], references: [id])
  userId String
  likes  Like[]
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

}

model Like {
  id        String  @unique
  post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId String?
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Follower {
  id String @unique
  followerId String 
  follower User @relation(fields: [followedId], references: [id])
  followedId String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}
